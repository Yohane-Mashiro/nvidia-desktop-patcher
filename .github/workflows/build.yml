name: build-linux-binary

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  build:
    name: Build (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          check-latest: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build binary with PyInstaller
        run: |
          pyinstaller --onefile --clean --name nvidia-desktop-patcher nvidia-desktop-patcher.py
          ls -l dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nvidia-desktop-patcher-linux
          path: dist/nvidia-desktop-patcher

  release:
    name: Release (tag)
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: nvidia-desktop-patcher-linux
          path: dist

      - name: Create tarball
        run: |
          cd dist
          tar czf nvidia-desktop-patcher-linux-x86_64.tar.gz nvidia-desktop-patcher
          ls -l

      - name: Generate SHA256 checksums
        run: |
          cd dist
          sha256sum nvidia-desktop-patcher nvidia-desktop-patcher-linux-x86_64.tar.gz | tee SHA256SUMS

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            dist/nvidia-desktop-patcher
            dist/nvidia-desktop-patcher-linux-x86_64.tar.gz
            dist/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
